swagger: "2.0"
info: 
  version: "1.0"
  title: "OpenStack Deployment Using Lib"
  description: "A simple service to pull OpenStack instance attributes and deploy the instance"
  termsOfService: "http://swagger.io/terms/"
  license: 
    name: "Apache"
host: "localhost:8080"
basePath: "/cloudmesh/openstack"
schemes: 
  - "http"
consumes: 
  - "application/json"
produces: 
  - "application/json"
paths: 
  /images:
    get:
      description: "Returns a list of images available"
      produces:
        - "application/json"
      responses: 
        "200":
          description: "Images info"
          schema: 
            $ref: "#/definitions/IMAGES"
  /flavor:
    get:
      description: "Returns a list of flavors available"
      produces:
        - "application/json"
      responses:
        "200":
          description: "Flavor info"
          schema:
            $ref: "#/definitions/FLAVOR"
  /listInstances:
    get:
      description: "Returns a list of instances available"
      produces:
        - "application/json"
      responses:
        "200":
          description: "Instance info"
          schema:
            $ref: "#/definitions/INSTANCE"
  /createInstance:
    post:
      description: "Create an instance"
      operationId: "createVM"
      parameters:
        - in: body
          name: attributes 
          description: "Provide the instance name(required),image name/id, flavor id, ssh keypair name, security group to create an instance as payload"
          schema:
            $ref: '#/definitions/ATTRIBUTES'
      responses:
        200:
          description: "instance was created successfully."
  /deleteInstance/{instance_name}:
    delete:
      description: "Delete an instance"
      operationId: "deleteVM"
      parameters:
        - in: path
          name: instance_name 
          description: "Provide the instance name in path"
          required: true
          type: string
      responses:
        "200":
          description: "Instance was deleted successfully"
          schema:
            $ref: "#/definitions/DELETE"
  /stopInstance:
    post:
      description: "Stop an instance"
      operationId: "stop_vm"
      parameters:
        - in: body
          name: param
          description: "Provide the instance name in the body"
          schema:
            $ref: "#/definitions/DELETE"
      responses:
        "200":
          description: "Instance was stopped successfully"
  /startInstance:
    post:
      description: "Start a stopped instance"  
      operationId: "start_vm"
      parameters:
        - in: body
          name: param
          description: "Provide the instance name in the body"
          schema:
            $ref: "#/definitions/DELETE"
      responses:
        "200":
          description: "Instance was started successfully"
  /addkeypair:
    post:
      description: "Add a new SSH KeyPair on the cloud"
      operationId: "addkeypair"
      parameters:
        - in: body
          name: params
          description: "Provide the ssh keypair name and the public key as payload"
          schema:
            $ref: "#/definitions/KEYPAIR"
      responses:
        "200":
          description: "ssh keypair was added successfully"
  /floatingIP:
    post:
      description: "Attach a floating IP with the instance"
      operationId: "addfloatingIP"
      parameters:
        - in: body
          name: param
          description: "Provide the instance name to attach the floating IP in body"
          schema:
            $ref: "#/definitions/DELETE"
      responses:
        "200":
          description: "Floating IP was attached successfully"
  /securitygroup:
    post:
      description: "Create security group if not already existing"
      operationId: "addsecuritygroup"
      parameters:
        - in: body
          name: param
          description: "Provide the security group name in body"
          schema:
            $ref: "#/definitions/SECURITY"
      responses:
        "200":
          description: "Security group was created successfully and associated with the instance"

definitions:
  IMAGES:
    type: "object"
    required:
      - "id"
      - "name"
      - "status"
    properties: 
      id:
        type: "string"
      name:
        type: "string"
      status:
        type: "string"
  FLAVOR:
    type: "object"
    required:
      - "id"
      - "name"
      - "ram"
      - "disk"
      - "bandwidth"
      - "vcpus"
    properties:
      id:
        type: "string"
      name:
        type: "string"
      ram:
        type: "string"
      disk:
        type: "string"
      bandwidth:
        type: "string"
      vcpus:
        type: "string"
  INSTANCE:
    type: "object"
    required:
      - "uuid"
      - "name"
      - "state"
      - "public_ips"
      - "private_ips"
      - "image_id"
      - "created"
      - "flavorId"
      - "tenantId"
      - "key_name"
    properties:
      uuid:
        type: "string"
      name:
        type: "string"
      state:
        type: "string"
      public_ips:
        type: "string"
      private_ips:
        type: "string"
      image_id:
        type: "string"
      created:
        type: "string"
      flavorId:
        type: "string"
      tenantId:
        type: "string"
      key_name:
       type: "string"
  ATTRIBUTES:
    type: "object"
    required:
      - "instance_name"
    properties:
      instance_name:
        type: "string"
      image_id:
        type: "string"
      flavor_id:
        type: "string"
      security_group:
        type: "string"
      keypair_name:
        type: "string"
  DELETE:
    type: "object"
    required:
      - "instance_name"
    properties:
      instance_name:
        type: "string"
  KEYPAIR:
    type: "object"
    required:
      - "keypair_name"
      - "public_key"
    properties:
      keypair_name:
        type: "string"
      public_key:
        type: "string"
  SECURITY:
    type: "object"
    required:
      - "group_name"
    properties:
      group_name:
        type: "string"
